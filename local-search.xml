<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>windows环境下,redis的启动问题</title>
    <link href="/2023/12/10/windows%E7%8E%AF%E5%A2%83%E4%B8%8B-redis%E7%9A%84%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/"/>
    <url>/2023/12/10/windows%E7%8E%AF%E5%A2%83%E4%B8%8B-redis%E7%9A%84%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接:"></a>原文链接:</h1><p><a href="https://blog.csdn.net/summer_style/java/article/details/106534996">https://blog.csdn.net/summer_style/java/article/details/106534996</a></p><h1 id="windows环境中redis的配置文件"><a href="#windows环境中redis的配置文件" class="headerlink" title="windows环境中redis的配置文件"></a>windows环境中redis的配置文件</h1><p>Windows版的Redis有2个配置文件，一个是：redis.windows.conf，另一个是redis.windows-service.conf。</p><p>由于安装版的Redis服务自启动，是<strong>直接通过</strong>redis-server.exe启动的，但是，启动时并没有加载Redis的配置文件（redis.windows.conf），导致redis 中bind配置和密码设置不生效。</p><h2 id="Redis自启动导致的常见的问题有："><a href="#Redis自启动导致的常见的问题有：" class="headerlink" title="Redis自启动导致的常见的问题有："></a>Redis自启动导致的常见的问题有：</h2><h3 id="1、在CMD命令加载配置文件（redis-windows-conf）进行启动是不成功的。提示如下："><a href="#1、在CMD命令加载配置文件（redis-windows-conf）进行启动是不成功的。提示如下：" class="headerlink" title="1、在CMD命令加载配置文件（redis.windows.conf）进行启动是不成功的。提示如下："></a>1、在CMD命令加载配置文件（redis.windows.conf）进行启动是不成功的。提示如下：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\soft\Redis&gt;redis-server.exe redis.windows.conf  <br>[13760] 11 Jul 16:39:51.067 # Creating Server TCP listening socket 127.0.0.1:6379: bind: No error<br></code></pre></td></tr></table></figure><p>为Redis服务已经自启动，这里是不会再新启动的，故加载配置文件是失败的。也没有出现Redis启动的小盒子（下面有图片，慢慢往下看），需要注意的是Windows版的Redis安装时，默认启动加载的配置文件是redis.windows-service.conf，如下图所示：</p><p><img src="/img/redis%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8.png"></p><h3 id="2、密码失效。虽然在配置文件（redis-windows-conf）设置了密码，密码为123456"><a href="#2、密码失效。虽然在配置文件（redis-windows-conf）设置了密码，密码为123456" class="headerlink" title="2、密码失效。虽然在配置文件（redis.windows.conf）设置了密码，密码为123456"></a>2、密码失效。虽然在配置文件（redis.windows.conf）设置了密码，密码为123456</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">################################## SECURITY ###################################  <br>……省略……  <br># requirepass foobared  <br>requirepass <span class="hljs-number">123456</span> <br></code></pre></td></tr></table></figure><p>但启动客户端进行Redis命令操作时，是不需要密码的，也没有提示无权限操作，这是一个严重的安全问题。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">D:\soft\Redis&gt;redis-cli.exe  <br><span class="hljs-number">127.0.0.1:6379</span>&gt; get name  <br><span class="hljs-string">&quot;haha&quot;</span>  <br><span class="hljs-number">127.0.0.1:6379</span>&gt;  <br></code></pre></td></tr></table></figure><h3 id="3、Redis访问IP绑定（bind）无效"><a href="#3、Redis访问IP绑定（bind）无效" class="headerlink" title="3、Redis访问IP绑定（bind）无效"></a>3、Redis访问IP绑定（bind）无效</h3><p>Redis默认绑定的ip为127.0.0.1，但如果想内网的机器都能访问，则需要设置内网的ip地址，如192.168.100.66，然后redis.host则可以设置为192.168.100.66访问Redis。<br>Redis ip地址绑定默认说明：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs clean">################################## NETWORK #####################################  <br>  <br># By default, <span class="hljs-keyword">if</span> no <span class="hljs-string">&quot;bind&quot;</span> configuration directive is specified, Redis listens  <br># for connections <span class="hljs-keyword">from</span> all the network interfaces available on the server.  <br># It is possible to listen to just one or multiple selected interfaces using  <br># the <span class="hljs-string">&quot;bind&quot;</span> configuration directive, followed by one or more IP addresses.  <br>#  <br># Examples:  <br>#  <br># bind <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>  <br># bind <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> ::<span class="hljs-number">1</span>  <br>#  <br># ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the  <br># internet, binding to all the interfaces is dangerous and will expose the  <br># <span class="hljs-keyword">instance</span> to everybody on the internet. So by default we uncomment the  <br># following bind directive, that will force Redis to listen only into  <br># the IPv4 lookback interface address (this means Redis will be able to  <br># accept connections only <span class="hljs-keyword">from</span> clients running into the same computer it  <br># is running).  <br>#  <br># IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES  <br># JUST COMMENT THE FOLLOWING LINE.  <br># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  <br>bind <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>  <br></code></pre></td></tr></table></figure><p>主要是意思是，如果设置了bind，只能通过绑定的地址访问Redis。</p><p>如果不设置bind，则所有地址都可以访问，如果在项目部署外网，所有人都可以访问到，所以这里也是个注意的地址，还是设置bind比较安全。</p><p>绑定多个ip地址：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">bind</span> <span class="hljs-number">127.0.0.1</span> <span class="hljs-number">192.168.100.66</span>  <br></code></pre></td></tr></table></figure><p>127.0.0.1和192.168.100.66之间通过空格分隔，不是逗号。<br>但如果Redis是自启动的，没有加载配置文件（redis.windows.conf）启动，这里的设置也是无效的。<br>如果不绑定ip地址（192.168.100.66），直接设置redis.host&#x3D;192.168.100.66是访问不了的，出现以下的错误：<br>redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool</p><p>所以说，Redis由Windows自启动的，配置文件（redis.windows.conf）的设置都是无效的</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h2><ol><li>禁用Redis的自启动，设置为手动</li><li>不要使用Redis安装版，使用压缩版</li><li>通过命令行CMD加载配置文件（redis.windows.conf）启动</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\soft\Redis&gt;redis-server.exe redis.windows.conf  <br></code></pre></td></tr></table></figure><p>​4.再新打开一个cmd（不要关闭之前打的Cmd窗口），启动Redis客户端：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\soft\Redis&gt;redis-cli.exe  <br></code></pre></td></tr></table></figure><p>​5.获取Redis中某个key的值，提示无权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">127.0.0.1:6379&gt; get name  <br>(error) NOAUTH Authentication required.  <br>127.0.0.1:6379&gt;  <br></code></pre></td></tr></table></figure><p>通过密码进入访问，使用 auth + 密码，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">127.0.0.1:6379&gt; get name  <br>(error) NOAUTH Authentication required.  <br>127.0.0.1:6379&gt; auth 123456  <br>OK  <br>127.0.0.1:6379&gt; get name  <br>&quot;haha&quot;  <br>127.0.0.1:6379&gt;  <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>rn小鸡测试</title>
    <link href="/2023/11/24/rn%E5%B0%8F%E9%B8%A1%E6%B5%8B%E8%AF%95/"/>
    <url>/2023/11/24/rn%E5%B0%8F%E9%B8%A1%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>———————基础信息查询–感谢所有开源项目———————<br> CPU 型号          : Intel(R) Xeon(R) CPU E5-2690 v2 @ 3.00GHz<br> CPU 核心数        : 1<br> CPU 频率          : 2999.998 MHz<br> CPU 缓存          : L1: 0.00 KB &#x2F; L2: 0.00 KB &#x2F; L3: 0.00 KB<br> 硬盘空间          : 1.82 GiB &#x2F; 13.99 GiB<br> 启动盘路径        : &#x2F;dev&#x2F;vda1<br> 内存              : 132.18 MiB &#x2F; 738.68 MiB<br> Swap              : 0 KiB &#x2F; 768.00 MiB<br> 系统在线时间      : 0 days, 0 hour 56 min<br> 负载              : 0.39, 0.11, 0.05<br> 系统              : CentOS Linux 7 (Core) (x86_64)<br> AES-NI指令集      : ✔ Enabled<br> VM-x&#x2F;AMD-V支持    : ❌ Disabled<br> 架构              : x86_64 (64 Bit)<br> 内核              : 3.10.0-1160.102.1.el7.x86_64<br> TCP加速方式       : cubic<br> 虚拟化架构        : KVM<br> NAT类型           : Restric NAT<br> IPV4 ASN          : AS36352 ColoCrossing<br> IPV4 位置         : San Jose &#x2F; California &#x2F; US<br>———————CPU测试–感谢lemonbench开源————————<br> -&gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec)<br> 1 线程测试(1核)得分: 859 Scores<br>———————内存测试–感谢lemonbench开源———————–<br> -&gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec)<br> 单线程读测试:18574.60 MB&#x2F;s<br> 单线程写测试:14265.04 MB&#x2F;s<br>——————磁盘dd读写测试–感谢lemonbench开源——————–<br> -&gt; 磁盘IO测试中 (4K Block&#x2F;1M Block, Direct Mode)<br> 测试操作写速度读速度<br> 100MB-4K Block43.1 MB&#x2F;s (10.53 IOPS, 2.43s)43.4 MB&#x2F;s (10599 IOPS, 2.42s)<br> 1GB-1M Block1.6 GB&#x2F;s (1563 IOPS, 0.64s)1.0 GB&#x2F;s (987 IOPS, 1.01s)<br>———————磁盘fio读写测试–感谢yabs开源———————-</p><table><thead><tr><th>Block Size</th><th>4k            (IOPS)</th><th>64k           (IOPS)</th></tr></thead><tbody><tr><td>Read</td><td>65.28 MB&#x2F;s   (16.3k)</td><td>996.49 MB&#x2F;s  (15.5k)</td></tr><tr><td>Write</td><td>65.40 MB&#x2F;s   (16.3k)</td><td>1.00 GB&#x2F;s    (15.6k)</td></tr><tr><td>Total</td><td>130.69 MB&#x2F;s  (32.6k)</td><td>1.99 GB&#x2F;s    (31.2k)</td></tr><tr><td>Block Size</td><td>512k          (IOPS)</td><td>1m            (IOPS)</td></tr><tr><td>——</td><td>—            —-</td><td>—-           —-</td></tr><tr><td>Read</td><td>1.44 GB&#x2F;s     (2.8k)</td><td>1.36 GB&#x2F;s     (1.3k)</td></tr><tr><td>Write</td><td>1.51 GB&#x2F;s     (2.9k)</td><td>1.45 GB&#x2F;s     (1.4k)</td></tr><tr><td>Total</td><td>2.96 GB&#x2F;s     (5.7k)</td><td>2.82 GB&#x2F;s     (2.7k)</td></tr><tr><td>———————流媒体解锁–感谢sjlleo开源————————-</td><td></td><td></td></tr><tr><td>以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用</td><td></td><td></td></tr><tr><td>—————-Youtube—————-</td><td></td><td></td></tr><tr><td>[IPv4]</td><td></td><td></td></tr><tr><td>连接方式: Youtube Video Server</td><td></td><td></td></tr><tr><td>视频缓存节点地域: NUQ(NUQ04S38)</td><td></td><td></td></tr><tr><td>Youtube识别地域: 无信息(null)</td><td></td><td></td></tr><tr><td>—————-Netflix—————-</td><td></td><td></td></tr><tr><td>[IPv4]</td><td></td><td></td></tr><tr><td>Netflix在您的出口IP所在的国家不提供服务</td><td></td><td></td></tr><tr><td>[IPv6]</td><td></td><td></td></tr><tr><td>您的网络可能没有正常配置IPv6，或者没有IPv6网络接入</td><td></td><td></td></tr><tr><td>—————DisneyPlus—————</td><td></td><td></td></tr><tr><td>[IPv4]</td><td></td><td></td></tr><tr><td>当前IPv4出口解锁DisneyPlus</td><td></td><td></td></tr><tr><td>区域：美国区</td><td></td><td></td></tr><tr><td>解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断</td><td></td><td></td></tr><tr><td>—————-流媒体解锁–感谢RegionRestrictionCheck开源————–</td><td></td><td></td></tr><tr><td>以下为IPV4网络测试，若无IPV4网络则无输出</td><td></td><td></td></tr><tr><td>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[ Multination ]&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</td><td></td><td></td></tr><tr><td>Dazn:Yes (Region: US)</td><td></td><td></td></tr><tr><td>HotStar:No</td><td></td><td></td></tr><tr><td>Disney+:No</td><td></td><td></td></tr><tr><td>Netflix:No</td><td></td><td></td></tr><tr><td>YouTube Premium:Yes</td><td></td><td></td></tr><tr><td>Amazon Prime Video:Yes (Region: US)</td><td></td><td></td></tr><tr><td>TVBAnywhere+:Yes</td><td></td><td></td></tr><tr><td>iQyi Oversea Region:US</td><td></td><td></td></tr><tr><td>Viu.com:No</td><td></td><td></td></tr><tr><td>YouTube CDN:</td><td></td><td></td></tr><tr><td>Netflix Preferred CDN:Failed</td><td></td><td></td></tr><tr><td>Spotify Registration:Yes (Region: US)</td><td></td><td></td></tr><tr><td>Steam Currency:USD</td><td></td><td></td></tr><tr><td>ChatGPT:Yes</td><td></td><td></td></tr><tr><td>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</td><td></td><td></td></tr><tr><td>以下为IPV6网络测试，若无IPV6网络则无输出</td><td></td><td></td></tr><tr><td>—————TikTok解锁–感谢lmc999的源脚本及fscarmen PR————–</td><td></td><td></td></tr><tr><td>Tiktok Region:【US】</td><td></td><td></td></tr><tr><td>——————-欺诈分数以及IP质量检测–本脚本原创——————-</td><td></td><td></td></tr><tr><td>数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对</td><td></td><td></td></tr><tr><td>以下为各数据库编号，输出结果后将自带数据库来源对应的编号</td><td></td><td></td></tr><tr><td>ipinfo数据库 ①</td><td>scamalytics数据库 ②</td><td>virustotal数据库 ③</td></tr><tr><td>ip-api数据库 ⑥</td><td>ipwhois数据库     ⑦</td><td>ipregistry数据库 ⑧</td></tr><tr><td>欺诈分数(越低越好): 38②</td><td></td><td></td></tr><tr><td>abuse得分(越低越好): 0④</td><td></td><td></td></tr><tr><td>IP类型:</td><td></td><td></td></tr><tr><td>使用类型(usage_type):hosting①  Data Center&#x2F;Web Hosting&#x2F;Transit⑤  hosting⑧  hosting</td><td></td><td></td></tr><tr><td>spam⑨</td><td></td><td></td></tr><tr><td>公司类型(company_type):hosting①  hosting⑧</td><td></td><td></td></tr><tr><td>云服务提供商(cloud_provider):  Yes⑧</td><td></td><td></td></tr><tr><td>数据中心(datacenter):  Yes⑥ ⑨</td><td></td><td></td></tr><tr><td>移动网络(mobile):  No⑥</td><td></td><td></td></tr><tr><td>代理(proxy):  No① ② ⑥ ⑦ ⑧ ⑨ ⑩</td><td></td><td></td></tr><tr><td>VPN(vpn):  No① ② ⑦ ⑧</td><td></td><td></td></tr><tr><td>TOR(tor):  No① ② ⑦ ⑧ ⑨</td><td></td><td></td></tr><tr><td>TOR出口(tor_exit):  No⑧</td><td></td><td></td></tr><tr><td>搜索引擎机器人(search_engine_robot):②</td><td></td><td></td></tr><tr><td>匿名代理(anonymous):  No⑦ ⑧ ⑨</td><td></td><td></td></tr><tr><td>攻击方(attacker):  No⑧ ⑨</td><td></td><td></td></tr><tr><td>滥用者(abuser):  No⑧   Yes⑨</td><td></td><td></td></tr><tr><td>威胁(threat):  No⑧   Yes⑨</td><td></td><td></td></tr><tr><td>iCloud中继(icloud_relay):  No① ⑧ ⑨</td><td></td><td></td></tr><tr><td>未分配IP(bogon):  No⑧ ⑨</td><td></td><td></td></tr><tr><td>Google搜索可行性：YES</td><td></td><td></td></tr><tr><td>端口25检测:</td><td></td><td></td></tr><tr><td>本地: Yes</td><td></td><td></td></tr><tr><td>163邮箱: Yes</td><td></td><td></td></tr><tr><td>gmail邮箱：No</td><td></td><td></td></tr><tr><td>—————-三网回程–感谢zhanghanyun&#x2F;backtrace开源—————–</td><td></td><td></td></tr><tr><td>国家: US 城市: San Jose 服务商: AS36352 ColoCrossing</td><td></td><td></td></tr><tr><td>北京电信 219.141.136.12  电信163 [普通线路]</td><td></td><td></td></tr><tr><td>北京联通 202.106.50.1    联通4837[普通线路]</td><td></td><td></td></tr><tr><td>北京移动 221.179.155.161 移动CMI [普通线路]</td><td></td><td></td></tr><tr><td>上海电信 202.96.209.133  电信163 [普通线路]</td><td></td><td></td></tr><tr><td>上海联通 210.22.97.1     联通4837[普通线路]</td><td></td><td></td></tr><tr><td>上海移动 211.136.112.200 移动CMI [普通线路]</td><td></td><td></td></tr><tr><td>广州电信 58.60.188.222   电信163 [普通线路]</td><td></td><td></td></tr><tr><td>广州联通 210.21.196.6    联通4837[普通线路]</td><td></td><td></td></tr><tr><td>广州移动 120.196.165.24  移动CMI [普通线路]</td><td></td><td></td></tr><tr><td>成都电信 61.139.2.69     电信163 [普通线路]</td><td></td><td></td></tr><tr><td>成都联通 119.6.6.6       联通4837[普通线路]</td><td></td><td></td></tr><tr><td>成都移动 211.137.96.205  移动CMI [普通线路]</td><td></td><td></td></tr><tr><td>———————回程路由–感谢fscarmen开源及PR———————</td><td></td><td></td></tr><tr><td>依次测试电信&#x2F;联通&#x2F;移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉!</td><td></td><td></td></tr><tr><td>广州电信 58.60.188.222</td><td></td><td></td></tr><tr><td>1.55 ms AS36352 美国 加利福尼亚州 圣何塞 virmach.com</td><td></td><td></td></tr><tr><td>0.88 ms * RFC1918</td><td></td><td></td></tr><tr><td>1.80 ms AS3257 美国 加利福尼亚州 圣何塞 gtt.net</td><td></td><td></td></tr><tr><td>1.02 ms AS3257 [GTT-BACKBONE] 美国 加利福尼亚州 圣何塞 gtt.net</td><td></td><td></td></tr><tr><td>3.12 ms AS4134 [CHINANET-US] 美国 加利福尼亚州 洛杉矶 CT-GTT-SJC-PoP chinatelecom.com.cn 电信</td><td></td><td></td></tr><tr><td>260.43 ms AS4134 [CHINANET-BB] 中国 广东省 广州市 chinatelecom.com.cn 电信</td><td></td><td></td></tr><tr><td>150.47 ms AS4134 [CHINANET-BB] 中国 广东省 广州市 chinatelecom.com.cn 电信</td><td></td><td></td></tr><tr><td>156.14 ms AS4134 [CHINANET-BB] 中国 广东省 广州市 chinatelecom.com.cn 电信</td><td></td><td></td></tr><tr><td>361.97 ms AS4134 [APNIC-AP] 中国 广东省 深圳市 chinatelecom.com.cn 电信</td><td></td><td></td></tr><tr><td>157.57 ms AS4134 中国 广东省 深圳市 福田区 chinatelecom.com.cn 电信</td><td></td><td></td></tr><tr><td>广州联通 210.21.196.6</td><td></td><td></td></tr><tr><td>1.88 ms AS36352 美国 加利福尼亚州 圣何塞 virmach.com</td><td></td><td></td></tr><tr><td>0.77 ms * RFC1918</td><td></td><td></td></tr><tr><td>0.53 ms AS18779 美国 加利福尼亚州 圣克拉拉 egihosting.com</td><td></td><td></td></tr><tr><td>102.50 ms AS6939 [HURRICANE-11] 美国 加利福尼亚州 圣何塞 he.net</td><td></td><td></td></tr><tr><td>4.71 ms AS6939 美国 加利福尼亚州 圣何塞 he.net</td><td></td><td></td></tr><tr><td>190.55 ms AS4837 [CU169-BACKBONE] 中国 上海市 chinaunicom.cn 联通</td><td></td><td></td></tr><tr><td>190.11 ms AS4837 [CU169-BACKBONE] 中国 上海市 chinaunicom.cn 联通</td><td></td><td></td></tr><tr><td>198.43 ms AS17816 [UNICOM-GD] 中国 广东省 深圳市 chinaunicom.cn 联通</td><td></td><td></td></tr><tr><td>191.93 ms AS17623 [APNIC-AP] 中国 广东省 深圳市 chinaunicom.cn 联通</td><td></td><td></td></tr><tr><td>192.65 ms AS17623 [APNIC-AP] 中国 广东省 深圳市 宝安区 chinaunicom.cn 联通</td><td></td><td></td></tr><tr><td>广州移动 120.196.165.24</td><td></td><td></td></tr><tr><td>1.09 ms AS36352 美国 加利福尼亚州 圣何塞 virmach.com</td><td></td><td></td></tr><tr><td>1.07 ms * RFC1918</td><td></td><td></td></tr><tr><td>1.79 ms AS6939 [HURRICANE-1] 美国 加利福尼亚州 圣何塞 he.net</td><td></td><td></td></tr><tr><td>1.33 ms AS58453 [CMI-INT] 美国 加利福尼亚州 圣何塞 cmi.chinamobile.com 移动</td><td></td><td></td></tr><tr><td>169.84 ms AS58453 [CMI-INT] 中国 广东省 广州市 cmi.chinamobile.com 移动</td><td></td><td></td></tr><tr><td>161.14 ms AS9808 [CMNET] 中国 广东省 广州市 chinamobile.com 移动</td><td></td><td></td></tr><tr><td>169.34 ms AS9808 [CMNET] 中国 广东省 广州市 chinamobile.com 移动</td><td></td><td></td></tr><tr><td>163.25 ms AS9808 [CMNET] 中国 广东省 广州市 chinamobile.com 移动</td><td></td><td></td></tr><tr><td>175.43 ms AS9808 [CMNET] 中国 海南省 海口市 chinamobile.com 移动</td><td></td><td></td></tr><tr><td>171.99 ms AS56040 [APNIC-AP] 中国 广东省 深圳市 chinamobile.com 移动</td><td></td><td></td></tr><tr><td>——————–自动更新测速节点列表–本脚本原创——————–</td><td></td><td></td></tr><tr><td>位置 上传速度 下载速度 延迟  丢包率</td><td></td><td></td></tr><tr><td>Speedtest.net 898.76 Mbps 869.01 Mbps 37.58  0.0%</td><td></td><td></td></tr><tr><td>洛杉矶 913.77 Mbps 920.05 Mbps 13.47  0.0%</td><td></td><td></td></tr><tr><td>日本东京 709.05 Mbps 740.66 Mbps 180.60  0.0%</td><td></td><td></td></tr><tr><td>联通WuXi 22.10 Mbps 10.16 Mbps 260.21  4.7%</td><td></td><td></td></tr><tr><td>联通上海5G 13.17 Mbps 10.76 Mbps 158.43  0.0%</td><td></td><td></td></tr><tr><td>电信Zhenjiang5G 48.18 Mbps 634.72 Mbps 132.48  NULL</td><td></td><td></td></tr><tr><td>电信Nanjing5G 624.49 Mbps 547.10 Mbps 152.47  0.0%</td><td></td><td></td></tr></tbody></table><hr><h2 id="总共花费-6-分-1-秒-时间-gum-xim-24-5-00-03-saaku-EST-2023"><a href="#总共花费-6-分-1-秒-时间-gum-xim-24-5-00-03-saaku-EST-2023" class="headerlink" title=" 总共花费      : 6 分 1 秒 时间          : gum xim 24  5:00:03 saaku EST 2023"></a> 总共花费      : 6 分 1 秒<br> 时间          : gum xim 24  5:00:03 saaku EST 2023</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记一次解决hexo博客无法部署的情况</title>
    <link href="/2023/11/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E9%83%A8%E7%BD%B2%E7%9A%84%E6%83%85%E5%86%B5/"/>
    <url>/2023/11/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E9%83%A8%E7%BD%B2%E7%9A%84%E6%83%85%E5%86%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="场景复现"><a href="#场景复现" class="headerlink" title="场景复现:"></a>场景复现:</h1><p>当按照官网提示部署时,报错提示:</p><p><img src="/img/hexo%E9%83%A8%E7%BD%B2%E6%8A%A5%E9%94%99%E5%9B%BE%E7%89%87.png"></p><h1 id="原因"><a href="#原因" class="headerlink" title="原因:"></a>原因:</h1><p>同一台电脑的同一个ssh共钥无法配置到多个<a href="https://github.com/">github</a>账号。例如公司的电脑ssh公钥配置到公司的github账号后，无法在使用同一个公钥配置个人的github账号。这时候需要生成多个ssh密钥，分别配置给不同的github账户</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h1><h2 id="管理多组密钥"><a href="#管理多组密钥" class="headerlink" title="管理多组密钥"></a>管理多组密钥</h2><p> 可以创建 <code>~/.ssh/config</code> 来管理多组密钥，每一个 SSH 服务器对应一组密钥对，甚至可以对所有的 SSH 服务器使用同一组密钥。</p><p>  现在有这么一种情况，我有两个Github账号，需要两组SSH密钥对，一个Github账号经常使用，创建了密钥对，名为<code>id_rsa_normal_github</code>和<code>id_rsa_normal_github.pub</code>，另一个Github账号因为某种原因，也必须使用，为其创建了密钥对，名为<code>id_rsa_hugo_github</code>和<code>id_rsa_hugo_github.pub</code>，为此编辑配置文件<code>~/.ssh/config</code></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">vim ~<span class="hljs-regexp">/.ssh/</span>config<br></code></pre></td></tr></table></figure><p>复制以下内容，在Vim里按下小写字母<code>p</code>，然后再按下<code>Esc</code>键，输入<code>:wq</code>即可保存并退出。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Host github.com<br>    HostName github.com<br>    <span class="hljs-keyword">User</span> <span class="hljs-title">git</span><br>    PreferredAuthentications publickey<br>    IdentityFile ~/.ssh/id_rsa_normal_github<br><br>Host adoredee.github.com<br>    HostName github.com<br>    <span class="hljs-keyword">User</span> <span class="hljs-title">git</span><br>    PreferredAuthentications publickey<br>    IdentityFile ~/.ssh/id_rsa_hugo_github<br></code></pre></td></tr></table></figure><p>解释：</p><ul><li><strong>Host</strong>：Git识别名，是一个别名，如果使用Github上传下载代码，正常情况下是<code>github.com</code>，如果是多个Github账号，则需要起一个别名，建议命名规则为<code>项目名/账户名.git服务器</code>，比如<code>adoredee.github.com</code>第二个Host，第一个Host为正常命名：<code>github.com</code>；</li><li><strong>HostName</strong>：服务器地址，Github地址为<code>github.com</code>、GitLab地址为<code>gitlab.com</code>、Gitee地址为<code>gitee.com</code>；</li><li><strong>IdentityFile</strong>： 公钥文件所在的绝对路径；</li></ul><p>验证SSH密钥，注意@后面是在<code>~/.ssh/config</code>文件中指定的”Host”项</p><p>先验证第一个Host：<code>github.com</code>，运行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p>显示</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">Hi ***! You<span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does <span class="hljs-keyword">not</span> provide shell <span class="hljs-keyword">access</span>.<br></code></pre></td></tr></table></figure><p>再验证第二个Host：<code>adoredee.github.com</code>，运行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@adoredee</span>.github.com<br></code></pre></td></tr></table></figure><p>显示</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">Hi ***! You<span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does <span class="hljs-keyword">not</span> provide shell <span class="hljs-keyword">access</span>.<br></code></pre></td></tr></table></figure><h2 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br></code></pre></td></tr></table></figure><p><img src="/img/hexo%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F%E5%9B%BE.png"></p><p>部署成功</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>GitHub Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/09/hello-world/"/>
    <url>/2023/11/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
